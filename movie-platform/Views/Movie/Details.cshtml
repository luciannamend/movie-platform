@model movie_platform.Models.Movie

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@if (Context.Session.GetString("UserName") != null)
{
    <div>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Genre)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Genre)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Director)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Director)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ReleaseYear)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ReleaseYear)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AverageRating)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AverageRating)
            </dd>

            @* <dd><a asp-action="Download" asp-route-id="@Model?.MovieId">Download</a></dd> *@

            <dd><a href="javascript:void(0);" id="downloadLink">Download</a></dd>
        </dl>

        
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.MovieId">Edit Movie</a>  |

        <a asp-action="AddRate" asp-route-id="@Model?.MovieId">Add Rate</a>  |

        <a asp-action="Comments" asp-route-id="@Model?.MovieId">See Comments</a>  |

        <a asp-action="Index">Back to List</a>
    </div>
}
else
{
    <p>You are not logged in. Please <a asp-area="" asp-controller="Login" asp-action="Index">login</a> to view movie details.</p>
}

@section Scripts {
    <script>
        document.getElementById("downloadLink").addEventListener("click", async function () {
            try {
                const movieId = @Model?.MovieId; // Get the movie ID
                const response = await fetch(`/Movie/Download/${movieId}`);
                if (!response.ok) throw new Error("Network response was not ok");

                const data = await response.json();
                const url = data.url;

                // Open the URL in a new tab or initiate a download
                window.open(url, '_blank');
            } catch (error) {
                console.error("Failed to download the movie:", error);
            }
        });
    </script>
}


